trigger:
- master
- rel/*

pr:
- master
- rel/*

pool:
  vmImage: vs2017-win2016

steps:
- task: BatchScript@1
  inputs:
    filename: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\Tools\\VsDevCmd.bat"
    arguments: -no_logo
    modifyEnvironment: true
  displayName: Setup Environment Variables

- task: DotNetCoreCLI@2  
  inputs:
    command: custom
    custom: tool
    arguments: install --tool-path . nbgv
  displayName: Install NBGV tool

- script: nbgv cloud
  displayName: Set Version

- script: build.cmd
  displayName: Build 
  env:
    VSTS_ACCESS_TOKEN: $(System.AccessToken)
    COVERALLS_TOKEN: $(COVERALLS_TOKEN)

- task: CopyFiles@2
  inputs:
    Contents: 'artifacts/*.nupkg'
    TargetFolder: '$(build.artifactstagingdirectory)\packages'
    flattenFolders: true

- task: PowerShell@2
  displayName: Authenticode Sign artifacts
  inputs:
    filePath: script/Sign-Packages.ps1
  env:
    SignClientUser: $(SignClientUser)
    SignClientSecret: $(SignClientSecret)
    ArtifactDirectory: $(Build.ArtifactStagingDirectory)\Packages
  condition: and(succeeded(), not(eq(variables['build.reason'], 'PullRequest')), not(eq(variables['SignClientSecret'], '')), not(eq(variables['SignClientUser'], '')))

- task: PublishBuildArtifacts@1
  displayName: Publish Package Artifacts
  inputs:
    pathToPublish: '$(build.artifactstagingdirectory)\packages'
    artifactType: container
    artifactName: Packages

- task: CopyFiles@2
  inputs:
    Contents: '**\bin\**'
    TargetFolder: '$(build.artifactstagingdirectory)\binaries'

- task: PublishBuildArtifacts@1
  displayName: Publish Binaries
  inputs:
    pathToPublish: '$(build.artifactstagingdirectory)\binaries'
    artifactType: container
    artifactName: Binaries
